name: publish

on:
  push:
    branches:
      - main


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: trinhxuantam/portfolio-crm:latest


jobs:
  publish:
    name: publish image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Login to GitHub Container Registry
      run: |
        echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | docker login ghcr.io -u trinhxuantam --password-stdin

    - name: Build and publish Docker image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} .
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: create .env file
      run: |
        cat << EOF > .env
        ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}
        API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}
        APP_KEYS=${{ secrets.APP_KEYS }}
        DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }}
        DATABASE_HOST=${{ secrets.DATABASE_HOST }}
        DATABASE_NAME=${{ secrets.DATABASE_NAME }}
        DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
        DATABASE_PORT=${{ secrets.DATABASE_PORT }}
        DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
        DATABASE_SSL=${{ secrets.DATABASE_SSL }}
        DATABASE_URL=${{ secrets.DATABASE_URL }}
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}
        EOF

    - name: install ssh keys
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: connect and pull
      run: |
        scp docker-compose.yml .env ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.WORK_DIR }}
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          cd ${{ secrets.WORK_DIR }} && \
          echo ${{ secrets.PERSONAL_ACCESS_TOKEN }} | docker login ghcr.io -u trinhxuantam --password-stdin && \
          docker-compose pull && \
          docker-compose up -d && \
        exit"

    - name: cleanup
      run: rm -rf ~/.ssh
